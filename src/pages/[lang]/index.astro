---
import Layout from '@/layouts/Layout.astro';
import Dashboard from '@/components/general/Dashboard';

// Import all language translations
import { homePage as enHomePage } from '@/i18n/en/homePage';
import { homePage as esHomePage } from '@/i18n/es/homePage';
import { homePage as frHomePage } from '@/i18n/fr/homePage';
import { homePage as deHomePage } from '@/i18n/de/homePage';
import { homePage as itHomePage } from '@/i18n/it/homePage';
import { homePage as ptHomePage } from '@/i18n/pt/homePage';

// Import all language translations for loggedDashboardPage
import { loggedDashboardPage as enLoggedDashboardPage } from '@/i18n/en/loggedDashboardPage';
import { loggedDashboardPage as esLoggedDashboardPage } from '@/i18n/es/loggedDashboardPage';
import { loggedDashboardPage as frLoggedDashboardPage } from '@/i18n/fr/loggedDashboardPage';
import { loggedDashboardPage as deLoggedDashboardPage } from '@/i18n/de/loggedDashboardPage';
import { loggedDashboardPage as itLoggedDashboardPage } from '@/i18n/it/loggedDashboardPage';
import { loggedDashboardPage as ptLoggedDashboardPage } from '@/i18n/pt/loggedDashboardPage';

export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'es' } },
    { params: { lang: 'fr' } },
    { params: { lang: 'de' } },
    { params: { lang: 'it' } },
    { params: { lang: 'pt' } },
  ];
}

const { lang } = Astro.params;

// Get translations based on language
const getTranslations = (language: string) => {
  switch (language) {
    case 'es':
      return esHomePage;
    case 'fr':
      return frHomePage;
    case 'de':
      return deHomePage;
    case 'it':
      return itHomePage;
    case 'pt':
      return ptHomePage;
    case 'en':
    default:
      return enHomePage;
  }
};

// Get loggedDashboardPage translations based on language
const getLoggedDashboardPageTranslations = (language: string) => {
  switch (language) {
    case 'es':
      return esLoggedDashboardPage;
    case 'fr':
      return frLoggedDashboardPage;
    case 'de':
      return deLoggedDashboardPage;
    case 'it':
      return itLoggedDashboardPage;
    case 'pt':
      return ptLoggedDashboardPage;
    case 'en':
    default:
      return enLoggedDashboardPage;
  }
};

const translations = getTranslations(lang || 'en');
const loggedDashboardTranslations = getLoggedDashboardPageTranslations(lang || 'en');
---

<Layout>
	<Dashboard client:load loginText={translations.loginText} logoutText={translations.logoutText} translations={translations} loggedDashboardTranslations={loggedDashboardTranslations} />
</Layout>

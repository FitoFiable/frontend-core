---
import Layout from '@/layouts/Layout.astro';
import UserInfoPageComponent from '@/components/dashboard_components/UserInfoPage';

// Import all language translations for homePage
import { homePage as enHomePage } from '@/i18n/en/homePage';
import { homePage as esHomePage } from '@/i18n/es/homePage';
import { homePage as frHomePage } from '@/i18n/fr/homePage';
import { homePage as deHomePage } from '@/i18n/de/homePage';
import { homePage as itHomePage } from '@/i18n/it/homePage';
import { homePage as ptHomePage } from '@/i18n/pt/homePage';

// Import all language translations for userInfoPage
import { userInfoPage as enUserInfoPage } from '@/i18n/en/userInfoPage';
import { userInfoPage as esUserInfoPage } from '@/i18n/es/userInfoPage';
import { userInfoPage as frUserInfoPage } from '@/i18n/fr/userInfoPage';
import { userInfoPage as deUserInfoPage } from '@/i18n/de/userInfoPage';
import { userInfoPage as itUserInfoPage } from '@/i18n/it/userInfoPage';
import { userInfoPage as ptUserInfoPage } from '@/i18n/pt/userInfoPage';

export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'es' } },
    { params: { lang: 'fr' } },
    { params: { lang: 'de' } },
    { params: { lang: 'it' } },
    { params: { lang: 'pt' } },
  ];
}

const { lang } = Astro.params;

// Get homePage translations based on language
const getHomePageTranslations = (language: string) => {
  switch (language) {
    case 'es':
      return esHomePage;
    case 'fr':
      return frHomePage;
    case 'de':
      return deHomePage;
    case 'it':
      return itHomePage;
    case 'pt':
      return ptHomePage;
    case 'en':
    default:
      return enHomePage;
  }
};

// Get userInfoPage translations based on language
const getUserInfoPageTranslations = (language: string) => {
  switch (language) {
    case 'es':
      return esUserInfoPage;
    case 'fr':
      return frUserInfoPage;
    case 'de':
      return deUserInfoPage;
    case 'it':
      return itUserInfoPage;
    case 'pt':
      return ptUserInfoPage;
    case 'en':
    default:
      return enUserInfoPage;
  }
};

const homePageTranslations = getHomePageTranslations(lang || 'en');
const userInfoPageTranslations = getUserInfoPageTranslations(lang || 'en');
---

<Layout>
	<UserInfoPageComponent 
		client:load 
		translations={userInfoPageTranslations}
		homePageTranslations={homePageTranslations}
	/>
</Layout>
